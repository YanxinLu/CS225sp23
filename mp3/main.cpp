#include "list.h"
#include "cs225/HSLAPixel.h"
#include "cs225/PNG.h"
#include <iostream>
using namespace cs225;

int main() {
  //Test written by lyx
  cout<<"---------------check for insertfront or insertback---------------"<<endl;
  List<int> l1,l2;
  for(int i=0; i<10; i++){
    l1.insertFront(i);
    l2.insertBack(i);
  }
  cout<<"expected  <9,8,7,6,5,4,3,2,1,0> 10"<<endl;
  cout<<"print insertFront list l1  ";
  l1.print(cout);
  cout<<endl;
  cout<<"length   "<<l1.size()<<endl;
  cout<<"expected  <0,1,2,3,4,5,6,7,8,9> 10"<<endl;
  cout<<"print insertBack list l2   ";
  l2.print(cout);
  cout<<endl;
  cout<<"length   "<<l1.size()<<endl;
  cout<<endl;
  cout<<"---------------insertfront and insertback crossingly---------------"<<endl;
  List<int> l3;
  for(int i=0; i<10; i++){
    l3.insertFront(i);
    l3.insertBack(i);
  }
  cout<<"expected: <9,8,7,6,5,4,3,2,1,0,0,1,2,3,4,5,6,7,8,9>  20"<<endl;
  cout<<"print list  ";
  l3.print(cout);
  cout<<endl;
  cout<<"length   "<<l3.size()<<endl;
  cout<<endl; 
  cout<<"---------------reverse---------------"<<endl;
  l2.reverse();
  l1.print(cout);
  l2.print(cout);
  cout<<"same means pass"<<endl;
  cout<<endl; 
  cout<<"---------------reverseNth---------------"<<endl;
  for(int i=0; i<=10; i++){
    List<int> ltem;
    ltem = l1;
    cout<<"reverseNth n:  "<< i<<endl;
    ltem.reverseNth(i);
    ltem.print(cout);
    cout<<endl;
  }
  cout<<endl; 
  cout<<"---------------split---------------"<<endl;
  List<int> l;
  l.insertFront(1);
  l.insertBack(2);
  l.insertBack(3);
  l.insertBack(4);
  List<int> r1 = l;
  List<int> r2 = r1.split(4);
  cout<<"expected <1,2,3,4> <>"<<endl;
  r1.print(cout);
  cout<<endl;
  r2.print(cout);
  cout<<endl;
  List<int> r3 = l;
  List<int> r4 = r3.split(3);
  cout<<"expected <1,2,3> <4>"<<endl;
  r3.print(cout);
  cout<<endl;
  r4.print(cout);
  cout<<endl;
  List<int> r5 = l;
  List<int> r6 = r5.split(2);
  cout<<"expected <1,2> <3,4>"<<endl;
  r5.print(cout);
  cout<<endl;
  r6.print(cout);
  cout<<endl;
  List<int> r7 = l;
  List<int> r8 = r7.split(1);
  cout<<"expected <1> <2,3,4>"<<endl;
  r7.print(cout);
  cout<<endl;
  r8.print(cout);
  cout<<endl;
  List<int> r9 = l;
  List<int> r10 = r9.split(0);
  cout<<"expected <> <1,2,3,4>"<<endl;
  r9.print(cout);
  cout<<endl;
  r10.print(cout);
  cout<<endl;
  cout<<"empty list"<<endl;
  List<int> emp;
  emp.split(0);
  emp.print(cout);
  cout<<endl;
  cout<<"---------------waterfall---------------"<<endl;
  List<int> wtf;
  for(int ii=0; ii<10; ii++){
    wtf.insertBack(ii);
    cout<<"number of elements: "<<ii<<endl;
    wtf.waterfall();
    wtf.print(cout);
    cout<<endl;
  }
  cout<<"---------------merge---------------"<<endl;
  List<int> m1,m2;
  cout<<"two empty"<<endl;
  m1.print(cout);
  cout<<endl;
  m2.print(cout);
  cout<<endl<<"the merge result: ";
  m1.mergeWith(m2);
  m1.print(cout);
  cout<<endl<<"one empty"<<endl;
  m2.insertBack(1);
  m1.print(cout);
  cout<<endl;
  m2.print(cout);
  cout<<endl<<"the merge result: ";
  m1.mergeWith(m2);
  m1.print(cout);
  cout<<endl<<"two same value"<<endl;
  m1.print(cout);
  cout<<endl;
  m2.print(cout);
  cout<<endl<<"the merge result: ";
  m1.mergeWith(m2);
  m1.print(cout);
  cout<<endl;
  cout<<"---------------mergeout---------------"<<endl;
  List<int> mo;
  cout<<"empty"<<endl;
  mo.sort();
  mo.print(cout);
  cout<<endl<<"one value"<<endl;
  mo.insertFront(1);
  mo.sort();
  mo.print(cout);
  cout<<endl<<"two same value"<<endl;
  mo.insertFront(1);
  mo.sort();
  mo.print(cout);
  cout<<endl<<"include 0"<<endl;
  List<int> mz;
  mz.insertBack(0);
  mz.insertBack(99);
  mz.insertFront(999);
  cout<<"before  ";
  mz.print(cout);
  cout<<endl;
  mz.sort();
  cout<<"after  ";
  mz.print(cout);
  cout<<endl;
  cout<<"include negetive number"<<endl;
  List<int> mz1;
  mz1.insertBack(10);
  mz1.insertBack(-1);
  mz1.insertFront(999);
  mz1.insertFront(6);
  cout<<"before  ";
  mz1.print(cout);
  cout<<endl;
  mz1.sort();
  cout<<"after  ";
  mz1.print(cout);
  cout<<endl;
  cout<<"a mixture"<<endl;
  List<int> mzzz;
  mzzz.insertBack(0);
  mzzz.insertBack(99);
  mzzz.insertFront(999);
  mzzz.insertFront(666);
  mzzz.insertBack(-5);
  mzzz.insertBack(6767);
  mzzz.insertFront(13);
  cout<<"before  ";
  mzzz.print(cout);
  cout<<endl;
  mzzz.sort();
  cout<<"after  ";
  mzzz.print(cout);
  cout<<endl;
  cout<<"different number of value"<<endl;
  List<int> ok,okk;
  for(int iii=0; iii<10; iii++){
    cout<<iii<<endl<<"Before"<<endl;
    okk.print(cout);
    cout<<endl<<"After"<<endl;
    okk.sort();
    okk.print(cout);
    cout<<endl;
    ok.insertFront(iii);
    okk = ok;
  }
  cout<<endl;
  okk.print(cout);
  okk.mergeWith(okk);
  okk.print(cout);
  cout<<endl;
  return 0;
}
